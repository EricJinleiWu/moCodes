Author : Eric Wu
Create Time : 2016-12-27

V1.0.0:
	Create this project for logging.
	This will output a so library;
	This library depends on libMoIniParser.so to parse ini file;
	Currently, support logout to stdout, and logout to file;
	In my design, just can use one config file with all processes once;
	I will use config file named "moLoggerConf.ini", when init, you should input a directory path, and this config file must be exist in this dir.

V1.0.1:
    EricWu, 20170303
    Canbe used in multi processes, but just allow one config file!
    If one process has been init succeed, the other process call init, then if they have same config file, it will return OK, and can be used;

V1.0.2:
    EricWu, 20170329
    From this version, the config file : moLoggerConf.ini will change a point:
        In last versions, attr "level" for a module is set to 0 -- 5, but this is not directly enough, I change it from "debug" to "fatal" in this version;
        Support five levels : debug, info, warn, error, fatal;
    
    Feature needed : to loginfo, should include __FILE__, __FUNCTION__, __LINE__, this can help us to debug.
	
V1.0.3:
    EricWu, 20170329
    From this version, I changed the API of moLogger from "moLogger(moduleName, level, ...)" to "moLoggerDebug(moduleName, ...) && moLoggerWarn... and so on";
    And after this version, all logs can contain __FILE__ && __FUNCTION__ && __LINE__, this can help us when debug.

V1.0.4:
    EricWu, 20171012
    From this version, I delete the appendence to "moIniParser";
    I changed the structure of MoSdk, moIniParser will be set to moConf which in moUtils;
    In moLogger, just use source code of moIniParser to do config file parsing work;
    This can help us to use moLogger without any other limits;
